<template>
  <v-page
    :show-header="false"
  >
    <div class="login">
      <h2 class="login-title">
        登录
      </h2>
      <div class="login-input">
        <van-search
          v-model="dataPhone"
          class="login-search"
          left-icon="no"
          :placeholder="placeholder"
          maxlength="13"
          type="Number"
        />
      </div>
      <div class="login-other">
        <dl class="login-other-dl">
          <dt>其他登录</dt>
          <dd @click="wechatLogin">
            <v-icon
              class="wechat-icon"
              name="weChat"
            />
            <p class="wechat-icon-text">
              微信登录
            </p>
          </dd>
        </dl>
      </div>
      <dl class="agree-rule">
        <dt @click="agree">
          <v-icon
            v-if="!isAgree"
            class="aree-icon"
            name="select"
          />
          <v-icon
            v-if="isAgree"
            class="aree-icon"
            name="selected"
          />
        </dt>
        <dd>
          我同意
          <router-link :to="{path:'/service'}">
            <span>《预约挂号服务协议》</span>
          </router-link>
          和
          <router-link :to="{path:'/private'}">
            <span>《隐私协议》</span>
          </router-link>
        </dd>
      </dl>
    </div>
    <div
      :class="btnstyle&&isAgree ? 'bottom-btn blue':'bottom-btn'"
      @click="loginBtn"
    >
      {{ btnMessage }}
    </div>
  </v-page>
</template>

<script>
// import { encrypt } from '@/utils/index'
import { fetchWechatLogin } from '@/api/login'
export default {
  data () {
    return {
      placeholder: '请输入您的手机号码',
      dataPhone: '',
      isAgree: true,
      btnMessage: '获取验证码',
      btnstyle: false,
      redirect: ''
      // screenWidth: 0,
      // oldscollHeight: document.documentElement.clientHeight 页面样式:style="{top: `${screenWidth}px`}"
    }
  },
  watch: {
    // 通过watch来设置空格
    dataPhone (newValue, oldValue) {
      this.dataPhone = newValue.length > oldValue.length ? newValue.replace(/\D/g, '').replace(/(\d{3})(\d{0,4})(\d{0,4})/, '$1 $2 $3') : this.dataPhone.trim()
      if (this.dataPhone.length === 13) {
        this.btnstyle = true
      } else {
        this.btnstyle = false
      }
    }
    // screenWidth (val) {
    //   if (this.oldscollHeight === this.screenWidth) {
    //     this.screenWidth = 0
    //   } else {
    //     this.screenWidth = val
    //   }
    // }
  },
  mounted () {
    this.redirect = this.$route.query.redirect
    // const that = this
    // window.onresize = () => {
    //   return (() => {
    //     window.screenWidth = document.documentElement.clientHeight || document.body.clientWidth
    //     that.screenWidth = window.screenWidth
    //   })()
    // }
  },
  methods: {
    agree () {
      this.isAgree = !this.isAgree
    },
    loginBtn () {
      if (this.btnstyle) {
        const phone = this.dataPhone.replace(/\ +/g, '')
        let urlName = ''
        if (this.redirect === '' || this.redirect === undefined) {
          urlName = 'home'
        } else {
          urlName = this.redirect
        }
        this.$router.push({ name: 'Verification', query: {
          // phone: encrypt(phone),
          phone: phone,
          redirect: urlName
        }})
      }
    },
    wechatLogin () {
      fetchWechatLogin().then((res) => {
        let urlName = ''
        if (this.redirect === '' || this.redirect === undefined) {
          urlName = 'home'
        } else {
          urlName = this.redirect
        }
        if (res === 'unbind') {
          this.$router.push({
            name: 'wechatTel',
            query: {
              name: urlName
            }
          })
        } else {
          this.$router.push({ name: urlName })
        }
      })
    }
  }
}
</script>

<style lang="less" scoped>
@import '~@/assests/styles/common.less';
@import '~@/assests/styles/layout.less';
.login {
  .login-title {
    font-size: 46px;
    margin: 60px 0 90px 60px;
    color: #333;
    font-weight: bold;
  }
  .login-input {
    margin:0 60px 40px;
    .login-search {
      border-bottom: 1PX solid #eee;
    }
  }
  .login-other {
    padding-left: 60px;
    .login-other-dl {
      overflow: hidden;
      dt {
        float: left;
        margin-top: 10px;
        margin-right: 20px;
        font-size: 24px;
      }
      dd {
        float: left;
        color: #00C25F;
        border: 1PX solid #00C25F;
        border-radius:30px;
        .wechat-icon {
          float: left;
          margin-left: 40px;
          font-size: 40px;
          padding-top: 5px;
          padding-bottom: 5px;
        }
        .wechat-icon-text {
          float: left;
          margin-left: 27px;
          font-weight: bold;
          font-size: 24px;
          padding-top: 10px;
          padding-right: 57px;
        }
      }
    }
  }
  .agree-rule {
    margin-top: 196px;
    padding-left: 114px;
    dt {
      float: left;
      margin-right: 10px;
      .aree-icon {
        color: @fontColorBlue;
        font-size: 30px;
      }
    }
    dd {
      float: left;
      font-size: 24px;
      span{
        color: @fontColorBlue;
      }
    }
  }
}
.bottom-btn{
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 90px;
  line-height: 90px;
  text-align: center;
  overflow: hidden;
  background: @backgroundColorGray;
  color: #999;
  font-size: 32px;
}
.blue{
  background: @backgroundColorBlue;
  color: #fff;
}
/deep/ .van-field__control{
  font-size: 40px;
  height: 50px;
  float: left;
}
/deep/ .van-search__content{
  background: #fff;
  padding-left: 0;
}
/deep/ .van-search{
  padding-bottom: 24px;
  padding-left: 0;
}
/deep/ .van-search .van-cell{
  background: #fff;
}
/deep/ .van-field__left-icon{
  display: none;
}
</style>
